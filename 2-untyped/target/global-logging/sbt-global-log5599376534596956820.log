[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""E:\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""E:\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (AdoptOpenJDK Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 317.3811ms
[debug]       Load.loadUnit: defsScala took 1.035ms
[debug] [Loading] Scanning directory C:\Users\syson\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\syson\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 90.3713 ms
[debug]           Load.resolveProject(global-plugins) took 149.8264ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\syson\.sbt\1.0\plugins, plugins: List(<none>))) took 349.6982ms
[debug] [Loading] Done in C:\Users\syson\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 416.3391ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.1314ms
[debug]     Load.loadUnit(file:/C:/Users/syson/.sbt/1.0/plugins/, ...) took 759.8198ms
[debug]   Load.apply: load took 1235.1593ms
[debug]   Load.apply: resolveProjects took 15.7445ms
[debug]   Load.apply: finalTransforms took 217.0901ms
[debug]   Load.apply: config.delegates took 24.368ms
[debug]   Load.apply: Def.make(settings)... took 1215.7578ms
[debug]   Load.apply: structureIndex took 319.2575ms
[debug]   Load.apply: mkStreams took 6.2274ms
[info] loading global plugins from C:\Users\syson\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7932.5006ms
[debug]           Load.loadUnit: plugins took 79.0559ms
[debug]           Load.loadUnit: defsScala took 0.0076ms
[debug] [Loading] Scanning directory D:\EPFL\fos\2-untyped\project
[debug]             Load.loadUnit: mkEval took 16.0911ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\EPFL\fos\2-untyped\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.8147 ms
[info] loading settings for project root-2-untyped-build from idea1.sbt ...
[debug]               Load.resolveProject(root-2-untyped-build) took 12.3358ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root-2-untyped-build, base: D:\EPFL\fos\2-untyped\project, plugins: List(<none>))) took 19.3913ms
[debug] [Loading] Done in D:\EPFL\fos\2-untyped\project, returning: (root-2-untyped-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 481.0485ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.2762ms
[debug]         Load.loadUnit(file:/D:/EPFL/fos/2-untyped/project/, ...) took 573.4748ms
[debug]       Load.apply: load took 576.5451ms
[debug]       Load.apply: resolveProjects took 0.2553ms
[debug]       Load.apply: finalTransforms took 22.6437ms
[debug]       Load.apply: config.delegates took 0.7515ms
[debug]       Load.apply: Def.make(settings)... took 309.2407ms
[debug]       Load.apply: structureIndex took 57.5348ms
[debug]       Load.apply: mkStreams took 0.0051ms
[info] loading project definition from D:\EPFL\fos\2-untyped\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1700.5169ms
[debug]     Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory D:\EPFL\fos\2-untyped
[debug]       Load.loadUnit: mkEval took 0.7769ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\EPFL\fos\2-untyped, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.4808 ms
[info] loading settings for project root-2-untyped from build.sbt ...
[debug]         Load.resolveProject(root-2-untyped) took 77.1001ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root-2-untyped, base: D:\EPFL\fos\2-untyped, plugins: List(<none>))) took 88.088ms
[debug] [Loading] Done in D:\EPFL\fos\2-untyped, returning: (root-2-untyped)
[debug]     Load.loadUnit: loadedProjectsRaw took 161.5278ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.8512ms
[debug]   Load.loadUnit(file:/D:/EPFL/fos/2-untyped/, ...) took 1870.1218ms
[debug] Load.apply: load took 1875.9846ms
[debug] Load.apply: resolveProjects took 0.3054ms
[debug] Load.apply: finalTransforms took 69.1851ms
[debug] Load.apply: config.delegates took 0.9981ms
[debug] Load.apply: Def.make(settings)... took 205.3841ms
[debug] Load.apply: structureIndex took 74.7149ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to root-2-untyped (in build file:/D:/EPFL/fos/2-untyped/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57429 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57429, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to root-2-untyped (in build file:/D:/EPFL/fos/2-untyped/)
[debug] > Exec(idea-shell, None, None)
