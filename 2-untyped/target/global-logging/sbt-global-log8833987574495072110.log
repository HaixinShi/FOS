[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""E:\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""E:\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (AdoptOpenJDK Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 144.3907ms
[debug]       Load.loadUnit: defsScala took 0.4253ms
[debug] [Loading] Scanning directory C:\Users\syson\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\syson\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.211 ms
[debug]           Load.resolveProject(global-plugins) took 143.3906ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\syson\.sbt\1.0\plugins, plugins: List(<none>))) took 219.5175ms
[debug] [Loading] Done in C:\Users\syson\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 258.8006ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4668ms
[debug]     Load.loadUnit(file:/C:/Users/syson/.sbt/1.0/plugins/, ...) took 419.8317ms
[debug]   Load.apply: load took 728.1762ms
[debug]   Load.apply: resolveProjects took 12.0734ms
[debug]   Load.apply: finalTransforms took 93.8112ms
[debug]   Load.apply: config.delegates took 19.6628ms
[debug]   Load.apply: Def.make(settings)... took 651.8822ms
[debug]   Load.apply: structureIndex took 168.2972ms
[debug]   Load.apply: mkStreams took 2.3478ms
[info] loading global plugins from C:\Users\syson\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9084.8408ms
[debug]           Load.loadUnit: plugins took 30.7756ms
[debug]           Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory D:\EPFL\fos\2-untyped\project
[debug]             Load.loadUnit: mkEval took 11.7634ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\EPFL\fos\2-untyped\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9112 ms
[info] loading settings for project root-2-untyped-build from idea.sbt ...
[debug]               Load.resolveProject(root-2-untyped-build) took 4.3306ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root-2-untyped-build, base: D:\EPFL\fos\2-untyped\project, plugins: List(<none>))) took 6.8792ms
[debug] [Loading] Done in D:\EPFL\fos\2-untyped\project, returning: (root-2-untyped-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3474.8204ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.7895ms
[debug]         Load.loadUnit(file:/D:/EPFL/fos/2-untyped/project/, ...) took 3511.3243ms
[debug]       Load.apply: load took 3512.46ms
[debug]       Load.apply: resolveProjects took 0.253ms
[debug]       Load.apply: finalTransforms took 12.1006ms
[debug]       Load.apply: config.delegates took 0.5659ms
[debug]       Load.apply: Def.make(settings)... took 187.8719ms
[debug]       Load.apply: structureIndex took 58.7218ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from D:\EPFL\fos\2-untyped\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5329.7583ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory D:\EPFL\fos\2-untyped
[debug]       Load.loadUnit: mkEval took 0.2855ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\EPFL\fos\2-untyped, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.2442 ms
[info] loading settings for project root-2-untyped from build.sbt ...
[debug]         Load.resolveProject(root-2-untyped) took 132.9582ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root-2-untyped, base: D:\EPFL\fos\2-untyped, plugins: List(<none>))) took 141.6552ms
[debug] [Loading] Done in D:\EPFL\fos\2-untyped, returning: (root-2-untyped)
[debug]     Load.loadUnit: loadedProjectsRaw took 1667.4706ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.5089ms
[debug]   Load.loadUnit(file:/D:/EPFL/fos/2-untyped/, ...) took 7009.6784ms
[debug] Load.apply: load took 7014.3009ms
[debug] Load.apply: resolveProjects took 0.2278ms
[debug] Load.apply: finalTransforms took 41.8342ms
[debug] Load.apply: config.delegates took 0.4117ms
[debug] Load.apply: Def.make(settings)... took 125.219ms
[debug] Load.apply: structureIndex took 37.3726ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to root-2-untyped (in build file:/D:/EPFL/fos/2-untyped/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56898 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56898, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to root-2-untyped (in build file:/D:/EPFL/fos/2-untyped/)
[debug] > Exec(idea-shell, None, None)
